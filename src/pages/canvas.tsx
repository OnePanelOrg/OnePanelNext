import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import ImageCanvas from "../components/ImageCanvas";
import InputForm from "../components/InputForm";


const Canvas: NextPage = () => {
    const [data, setData] = useState(null)
    const [isLoading, setLoading] = useState(false)

    async function postUrl(chapter_url: string) {
        console.log("fetching")
        console.log("chapter_url", chapter_url)
        setLoading(true)

        // const url = `${process.env.SERVER_URL}:${process.env.SERVER_PORT}/chapter`
        // https://onepiecechapters.com/chapters/5613/one-piece-chapter-1073
        const url = `https://api.onepanel.app/chapter`

        fetch(url, {
            mode: 'cors',
            method: "POST",
            body: JSON.stringify({ chapter_url: chapter_url }),
            headers: {
                "Access-Control-Allow-Origin": "*",
                "Content-Type": "application/json"
            }
        })
            .then((res) => res.json())
            .then((data) => {
                console.log(data)
                setData(data)
                setLoading(false)
            })
        // .catch(rejected => {
        //     console.log(rejected);
        // });
    }

    // async function dummy_postUrl() {
    //     console.log("dummy fetching")
    //     setLoading(true)

    //     // todo: get link fro user and do a request to get the json data
    //     fetch("output.json")
    //         .then((res) => res.json())
    //         .then((data) => {
    //             setData(data)
    //             setLoading(false)
    //         })
    // }

    // useEffect(() => {
    //     setLoading(true)
    //     // todo: get link fro user and do a request to get the json data
    //     fetch("output.json")
    //         .then((res) => res.json())
    //         .then((data) => {
    //             setData(data)
    //             setLoading(false)
    //         })
    // }, []);

    // if (isLoading) return <p>Loading...</p>
    // if (!data) return <p>No data</p>

    return (
        <>
            <Head>
                <title>OnePanel - Canvas</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
                <meta httpEquiv="Content-Security-Policy" content="upgrade-insecure-requests"></meta>
            </Head>
            <main className="flex h-full flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
                {/* todo: center canvas */}
                {!isLoading && !data && <InputForm childToParent={postUrl}></InputForm>}
                {/* OFCOURSE we need a better loading state */}
                {isLoading && <p>Loading...</p>}
                <div className="container" id="container">
                    {/* {!data && <p>No data</p>} */}
                    {data && !isLoading && <ImageCanvas data={data}></ImageCanvas>}
                </div>
            </main>
        </>
    );
};

export default Canvas;
